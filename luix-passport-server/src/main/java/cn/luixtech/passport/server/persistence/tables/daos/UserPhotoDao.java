/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.UserPhoto;
import cn.luixtech.passport.server.persistence.tables.records.UserPhotoRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class UserPhotoDao extends DAOImpl<UserPhotoRecord, cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto, String> {

    /**
     * Create a new UserPhotoDao without any configuration
     */
    public UserPhotoDao() {
        super(UserPhoto.USER_PHOTO, cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto.class);
    }

    /**
     * Create a new UserPhotoDao with an attached configuration
     */
    @Autowired
    public UserPhotoDao(Configuration configuration) {
        super(UserPhoto.USER_PHOTO, cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto.class, configuration);
    }

    @Override
    public String getId(cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPhoto.USER_PHOTO.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto> fetchById(String... values) {
        return fetch(UserPhoto.USER_PHOTO.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto fetchOneById(String value) {
        return fetchOne(UserPhoto.USER_PHOTO.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto> fetchOptionalById(String value) {
        return fetchOptional(UserPhoto.USER_PHOTO.ID, value);
    }

    /**
     * Fetch records that have <code>profile_photo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto> fetchRangeOfProfilePhoto(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(UserPhoto.USER_PHOTO.PROFILE_PHOTO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profile_photo IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPhoto> fetchByProfilePhoto(byte[]... values) {
        return fetch(UserPhoto.USER_PHOTO.PROFILE_PHOTO, values);
    }
}
