/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.UserAuthority;
import cn.luixtech.passport.server.persistence.tables.records.UserAuthorityRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class UserAuthorityDao extends DAOImpl<UserAuthorityRecord, cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority, Record2<String, String>> {

    /**
     * Create a new UserAuthorityDao without any configuration
     */
    public UserAuthorityDao() {
        super(UserAuthority.USER_AUTHORITY, cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority.class);
    }

    /**
     * Create a new UserAuthorityDao with an attached configuration
     */
    @Autowired
    public UserAuthorityDao(Configuration configuration) {
        super(UserAuthority.USER_AUTHORITY, cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority.class, configuration);
    }

    @Override
    public Record2<String, String> getId(cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority object) {
        return compositeKeyRecord(object.getUserId(), object.getAuthority());
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserAuthority.USER_AUTHORITY.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority> fetchByUserId(String... values) {
        return fetch(UserAuthority.USER_AUTHORITY.USER_ID, values);
    }

    /**
     * Fetch records that have <code>authority BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority> fetchRangeOfAuthority(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserAuthority.USER_AUTHORITY.AUTHORITY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>authority IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthority> fetchByAuthority(String... values) {
        return fetch(UserAuthority.USER_AUTHORITY.AUTHORITY, values);
    }
}
