/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.User;
import cn.luixtech.passport.server.persistence.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class UserDao extends DAOImpl<UserRecord, cn.luixtech.passport.server.persistence.tables.pojos.User, String> {

    /**
     * Create a new UserDao without any configuration
     */
    public UserDao() {
        super(User.USER, cn.luixtech.passport.server.persistence.tables.pojos.User.class);
    }

    /**
     * Create a new UserDao with an attached configuration
     */
    @Autowired
    public UserDao(Configuration configuration) {
        super(User.USER, cn.luixtech.passport.server.persistence.tables.pojos.User.class, configuration);
    }

    @Override
    public String getId(cn.luixtech.passport.server.persistence.tables.pojos.User object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchById(String... values) {
        return fetch(User.USER.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.User fetchOneById(String value) {
        return fetchOne(User.USER.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchOptionalById(String value) {
        return fetchOptional(User.USER.ID, value);
    }

    /**
     * Fetch records that have <code>tenant_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfTenantId(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.TENANT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>tenant_id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByTenantId(String... values) {
        return fetch(User.USER.TENANT_ID, values);
    }

    /**
     * Fetch records that have <code>username BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfUsername(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.USERNAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>username IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByUsername(String... values) {
        return fetch(User.USER.USERNAME, values);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.User fetchOneByUsername(String value) {
        return fetchOne(User.USER.USERNAME, value);
    }

    /**
     * Fetch a unique record that has <code>username = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchOptionalByUsername(String value) {
        return fetchOptional(User.USER.USERNAME, value);
    }

    /**
     * Fetch records that have <code>email BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfEmail(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.EMAIL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>email IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByEmail(String... values) {
        return fetch(User.USER.EMAIL, values);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.User fetchOneByEmail(String value) {
        return fetchOne(User.USER.EMAIL, value);
    }

    /**
     * Fetch a unique record that has <code>email = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchOptionalByEmail(String value) {
        return fetchOptional(User.USER.EMAIL, value);
    }

    /**
     * Fetch records that have <code>mobile_no BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfMobileNo(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.MOBILE_NO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>mobile_no IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByMobileNo(String... values) {
        return fetch(User.USER.MOBILE_NO, values);
    }

    /**
     * Fetch a unique record that has <code>mobile_no = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.User fetchOneByMobileNo(String value) {
        return fetchOne(User.USER.MOBILE_NO, value);
    }

    /**
     * Fetch a unique record that has <code>mobile_no = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchOptionalByMobileNo(String value) {
        return fetchOptional(User.USER.MOBILE_NO, value);
    }

    /**
     * Fetch records that have <code>first_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfFirstName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.FIRST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>first_name IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByFirstName(String... values) {
        return fetch(User.USER.FIRST_NAME, values);
    }

    /**
     * Fetch records that have <code>last_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfLastName(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.LAST_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>last_name IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByLastName(String... values) {
        return fetch(User.USER.LAST_NAME, values);
    }

    /**
     * Fetch records that have <code>password_hash BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfPasswordHash(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.PASSWORD_HASH, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_hash IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByPasswordHash(String... values) {
        return fetch(User.USER.PASSWORD_HASH, values);
    }

    /**
     * Fetch records that have <code>activation_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfActivationCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.ACTIVATION_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>activation_code IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByActivationCode(String... values) {
        return fetch(User.USER.ACTIVATION_CODE, values);
    }

    /**
     * Fetch records that have <code>reset_code BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfResetCode(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.RESET_CODE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reset_code IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByResetCode(String... values) {
        return fetch(User.USER.RESET_CODE, values);
    }

    /**
     * Fetch records that have <code>reset_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfResetTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.RESET_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>reset_time IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByResetTime(LocalDateTime... values) {
        return fetch(User.USER.RESET_TIME, values);
    }

    /**
     * Fetch records that have <code>profile_photo_enabled BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfProfilePhotoEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.PROFILE_PHOTO_ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>profile_photo_enabled IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByProfilePhotoEnabled(Boolean... values) {
        return fetch(User.USER.PROFILE_PHOTO_ENABLED, values);
    }

    /**
     * Fetch records that have <code>remarks BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfRemarks(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.REMARKS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remarks IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByRemarks(String... values) {
        return fetch(User.USER.REMARKS, values);
    }

    /**
     * Fetch records that have <code>activated BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfActivated(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.ACTIVATED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>activated IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByActivated(Boolean... values) {
        return fetch(User.USER.ACTIVATED, values);
    }

    /**
     * Fetch records that have <code>enabled BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfEnabled(Boolean lowerInclusive, Boolean upperInclusive) {
        return fetchRange(User.USER.ENABLED, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>enabled IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByEnabled(Boolean... values) {
        return fetch(User.USER.ENABLED, values);
    }

    /**
     * Fetch records that have <code>account_expires_at BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfAccountExpiresAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.ACCOUNT_EXPIRES_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>account_expires_at IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByAccountExpiresAt(LocalDateTime... values) {
        return fetch(User.USER.ACCOUNT_EXPIRES_AT, values);
    }

    /**
     * Fetch records that have <code>password_expires_at BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfPasswordExpiresAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.PASSWORD_EXPIRES_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>password_expires_at IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByPasswordExpiresAt(LocalDateTime... values) {
        return fetch(User.USER.PASSWORD_EXPIRES_AT, values);
    }

    /**
     * Fetch records that have <code>created_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfCreatedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.CREATED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_by IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByCreatedBy(String... values) {
        return fetch(User.USER.CREATED_BY, values);
    }

    /**
     * Fetch records that have <code>created_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfCreatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.CREATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByCreatedTime(LocalDateTime... values) {
        return fetch(User.USER.CREATED_TIME, values);
    }

    /**
     * Fetch records that have <code>modified_by BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfModifiedBy(String lowerInclusive, String upperInclusive) {
        return fetchRange(User.USER.MODIFIED_BY, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_by IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByModifiedBy(String... values) {
        return fetch(User.USER.MODIFIED_BY, values);
    }

    /**
     * Fetch records that have <code>modified_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchRangeOfModifiedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(User.USER.MODIFIED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>modified_time IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.User> fetchByModifiedTime(LocalDateTime... values) {
        return fetch(User.USER.MODIFIED_TIME, values);
    }
}
