/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.UserAuthEvent;
import cn.luixtech.passport.server.persistence.tables.records.UserAuthEventRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class UserAuthEventDao extends DAOImpl<UserAuthEventRecord, cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent, String> {

    /**
     * Create a new UserAuthEventDao without any configuration
     */
    public UserAuthEventDao() {
        super(UserAuthEvent.USER_AUTH_EVENT, cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent.class);
    }

    /**
     * Create a new UserAuthEventDao with an attached configuration
     */
    @Autowired
    public UserAuthEventDao(Configuration configuration) {
        super(UserAuthEvent.USER_AUTH_EVENT, cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent.class, configuration);
    }

    @Override
    public String getId(cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserAuthEvent.USER_AUTH_EVENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchById(String... values) {
        return fetch(UserAuthEvent.USER_AUTH_EVENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent fetchOneById(String value) {
        return fetchOne(UserAuthEvent.USER_AUTH_EVENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchOptionalById(String value) {
        return fetchOptional(UserAuthEvent.USER_AUTH_EVENT.ID, value);
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserAuthEvent.USER_AUTH_EVENT.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchByUserId(String... values) {
        return fetch(UserAuthEvent.USER_AUTH_EVENT.USER_ID, values);
    }

    /**
     * Fetch records that have <code>event BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchRangeOfEvent(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserAuthEvent.USER_AUTH_EVENT.EVENT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>event IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchByEvent(String... values) {
        return fetch(UserAuthEvent.USER_AUTH_EVENT.EVENT, values);
    }

    /**
     * Fetch records that have <code>remark BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchRangeOfRemark(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserAuthEvent.USER_AUTH_EVENT.REMARK, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>remark IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchByRemark(String... values) {
        return fetch(UserAuthEvent.USER_AUTH_EVENT.REMARK, values);
    }

    /**
     * Fetch records that have <code>created_time BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchRangeOfCreatedTime(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(UserAuthEvent.USER_AUTH_EVENT.CREATED_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>created_time IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserAuthEvent> fetchByCreatedTime(LocalDateTime... values) {
        return fetch(UserAuthEvent.USER_AUTH_EVENT.CREATED_TIME, values);
    }
}
