/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.SpringSession;
import cn.luixtech.passport.server.persistence.tables.records.SpringSessionRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class SpringSessionDao extends DAOImpl<SpringSessionRecord, cn.luixtech.passport.server.persistence.tables.pojos.SpringSession, String> {

    /**
     * Create a new SpringSessionDao without any configuration
     */
    public SpringSessionDao() {
        super(SpringSession.SPRING_SESSION, cn.luixtech.passport.server.persistence.tables.pojos.SpringSession.class);
    }

    /**
     * Create a new SpringSessionDao with an attached configuration
     */
    @Autowired
    public SpringSessionDao(Configuration configuration) {
        super(SpringSession.SPRING_SESSION, cn.luixtech.passport.server.persistence.tables.pojos.SpringSession.class, configuration);
    }

    @Override
    public String getId(cn.luixtech.passport.server.persistence.tables.pojos.SpringSession object) {
        return object.getPrimaryId();
    }

    /**
     * Fetch records that have <code>PRIMARY_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfPrimaryId(String lowerInclusive, String upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.PRIMARY_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PRIMARY_ID IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchByPrimaryId(String... values) {
        return fetch(SpringSession.SPRING_SESSION.PRIMARY_ID, values);
    }

    /**
     * Fetch a unique record that has <code>PRIMARY_ID = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.SpringSession fetchOneByPrimaryId(String value) {
        return fetchOne(SpringSession.SPRING_SESSION.PRIMARY_ID, value);
    }

    /**
     * Fetch a unique record that has <code>PRIMARY_ID = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchOptionalByPrimaryId(String value) {
        return fetchOptional(SpringSession.SPRING_SESSION.PRIMARY_ID, value);
    }

    /**
     * Fetch records that have <code>SESSION_ID BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfSessionId(String lowerInclusive, String upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.SESSION_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>SESSION_ID IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchBySessionId(String... values) {
        return fetch(SpringSession.SPRING_SESSION.SESSION_ID, values);
    }

    /**
     * Fetch a unique record that has <code>SESSION_ID = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.SpringSession fetchOneBySessionId(String value) {
        return fetchOne(SpringSession.SPRING_SESSION.SESSION_ID, value);
    }

    /**
     * Fetch a unique record that has <code>SESSION_ID = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchOptionalBySessionId(String value) {
        return fetchOptional(SpringSession.SPRING_SESSION.SESSION_ID, value);
    }

    /**
     * Fetch records that have <code>CREATION_TIME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfCreationTime(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.CREATION_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>CREATION_TIME IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchByCreationTime(Long... values) {
        return fetch(SpringSession.SPRING_SESSION.CREATION_TIME, values);
    }

    /**
     * Fetch records that have <code>LAST_ACCESS_TIME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfLastAccessTime(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.LAST_ACCESS_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>LAST_ACCESS_TIME IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchByLastAccessTime(Long... values) {
        return fetch(SpringSession.SPRING_SESSION.LAST_ACCESS_TIME, values);
    }

    /**
     * Fetch records that have <code>MAX_INACTIVE_INTERVAL BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfMaxInactiveInterval(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.MAX_INACTIVE_INTERVAL, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>MAX_INACTIVE_INTERVAL IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchByMaxInactiveInterval(Integer... values) {
        return fetch(SpringSession.SPRING_SESSION.MAX_INACTIVE_INTERVAL, values);
    }

    /**
     * Fetch records that have <code>EXPIRY_TIME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfExpiryTime(Long lowerInclusive, Long upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.EXPIRY_TIME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>EXPIRY_TIME IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchByExpiryTime(Long... values) {
        return fetch(SpringSession.SPRING_SESSION.EXPIRY_TIME, values);
    }

    /**
     * Fetch records that have <code>PRINCIPAL_NAME BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchRangeOfPrincipalName(String lowerInclusive, String upperInclusive) {
        return fetchRange(SpringSession.SPRING_SESSION.PRINCIPAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>PRINCIPAL_NAME IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.SpringSession> fetchByPrincipalName(String... values) {
        return fetch(SpringSession.SPRING_SESSION.PRINCIPAL_NAME, values);
    }
}
