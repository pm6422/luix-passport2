/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.UserPreference;
import cn.luixtech.passport.server.persistence.tables.records.UserPreferenceRecord;

import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class UserPreferenceDao extends DAOImpl<UserPreferenceRecord, cn.luixtech.passport.server.persistence.tables.pojos.UserPreference, String> {

    /**
     * Create a new UserPreferenceDao without any configuration
     */
    public UserPreferenceDao() {
        super(UserPreference.USER_PREFERENCE, cn.luixtech.passport.server.persistence.tables.pojos.UserPreference.class);
    }

    /**
     * Create a new UserPreferenceDao with an attached configuration
     */
    @Autowired
    public UserPreferenceDao(Configuration configuration) {
        super(UserPreference.USER_PREFERENCE, cn.luixtech.passport.server.persistence.tables.pojos.UserPreference.class, configuration);
    }

    @Override
    public String getId(cn.luixtech.passport.server.persistence.tables.pojos.UserPreference object) {
        return object.getUserId();
    }

    /**
     * Fetch records that have <code>user_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchRangeOfUserId(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPreference.USER_PREFERENCE.USER_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>user_id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchByUserId(String... values) {
        return fetch(UserPreference.USER_PREFERENCE.USER_ID, values);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.UserPreference fetchOneByUserId(String value) {
        return fetchOne(UserPreference.USER_PREFERENCE.USER_ID, value);
    }

    /**
     * Fetch a unique record that has <code>user_id = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchOptionalByUserId(String value) {
        return fetchOptional(UserPreference.USER_PREFERENCE.USER_ID, value);
    }

    /**
     * Fetch records that have <code>locale BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchRangeOfLocale(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPreference.USER_PREFERENCE.LOCALE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>locale IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchByLocale(String... values) {
        return fetch(UserPreference.USER_PREFERENCE.LOCALE, values);
    }

    /**
     * Fetch records that have <code>time_zone BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchRangeOfTimeZone(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPreference.USER_PREFERENCE.TIME_ZONE, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>time_zone IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchByTimeZone(String... values) {
        return fetch(UserPreference.USER_PREFERENCE.TIME_ZONE, values);
    }

    /**
     * Fetch records that have <code>date_format BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchRangeOfDateFormat(String lowerInclusive, String upperInclusive) {
        return fetchRange(UserPreference.USER_PREFERENCE.DATE_FORMAT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>date_format IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.UserPreference> fetchByDateFormat(String... values) {
        return fetch(UserPreference.USER_PREFERENCE.DATE_FORMAT, values);
    }
}
