/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Oauth2AuthorizationConsent implements Serializable {

    private static final long serialVersionUID = 1L;

    private String registeredClientId;
    private String principalName;
    private String authorities;

    public Oauth2AuthorizationConsent() {}

    public Oauth2AuthorizationConsent(Oauth2AuthorizationConsent value) {
        this.registeredClientId = value.registeredClientId;
        this.principalName = value.principalName;
        this.authorities = value.authorities;
    }

    public Oauth2AuthorizationConsent(
        String registeredClientId,
        String principalName,
        String authorities
    ) {
        this.registeredClientId = registeredClientId;
        this.principalName = principalName;
        this.authorities = authorities;
    }

    /**
     * Getter for <code>luix-passport2.oauth2_authorization_consent.registered_client_id</code>.
     */
    public String getRegisteredClientId() {
        return this.registeredClientId;
    }

    /**
     * Setter for <code>luix-passport2.oauth2_authorization_consent.registered_client_id</code>.
     */
    public void setRegisteredClientId(String registeredClientId) {
        this.registeredClientId = registeredClientId;
    }

    /**
     * Getter for <code>luix-passport2.oauth2_authorization_consent.principal_name</code>.
     */
    public String getPrincipalName() {
        return this.principalName;
    }

    /**
     * Setter for <code>luix-passport2.oauth2_authorization_consent.principal_name</code>.
     */
    public void setPrincipalName(String principalName) {
        this.principalName = principalName;
    }

    /**
     * Getter for <code>luix-passport2.oauth2_authorization_consent.authorities</code>.
     */
    public String getAuthorities() {
        return this.authorities;
    }

    /**
     * Setter for <code>luix-passport2.oauth2_authorization_consent.authorities</code>.
     */
    public void setAuthorities(String authorities) {
        this.authorities = authorities;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Oauth2AuthorizationConsent other = (Oauth2AuthorizationConsent) obj;
        if (registeredClientId == null) {
            if (other.registeredClientId != null)
                return false;
        }
        else if (!registeredClientId.equals(other.registeredClientId))
            return false;
        if (principalName == null) {
            if (other.principalName != null)
                return false;
        }
        else if (!principalName.equals(other.principalName))
            return false;
        if (authorities == null) {
            if (other.authorities != null)
                return false;
        }
        else if (!authorities.equals(other.authorities))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.registeredClientId == null) ? 0 : this.registeredClientId.hashCode());
        result = prime * result + ((this.principalName == null) ? 0 : this.principalName.hashCode());
        result = prime * result + ((this.authorities == null) ? 0 : this.authorities.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Oauth2AuthorizationConsent (");

        sb.append(registeredClientId);
        sb.append(", ").append(principalName);
        sb.append(", ").append(authorities);

        sb.append(")");
        return sb.toString();
    }
}
