/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.Oauth2RegisteredClient;
import cn.luixtech.passport.server.persistence.tables.records.Oauth2RegisteredClientRecord;

import java.time.LocalDateTime;
import java.util.List;
import java.util.Optional;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class Oauth2RegisteredClientDao extends DAOImpl<Oauth2RegisteredClientRecord, cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient, String> {

    /**
     * Create a new Oauth2RegisteredClientDao without any configuration
     */
    public Oauth2RegisteredClientDao() {
        super(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT, cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient.class);
    }

    /**
     * Create a new Oauth2RegisteredClientDao with an attached configuration
     */
    @Autowired
    public Oauth2RegisteredClientDao(Configuration configuration) {
        super(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT, cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient.class, configuration);
    }

    @Override
    public String getId(cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchById(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient fetchOneById(String value) {
        return fetchOne(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.ID, value);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public Optional<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchOptionalById(String value) {
        return fetchOptional(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.ID, value);
    }

    /**
     * Fetch records that have <code>client_id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientId(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_ID, values);
    }

    /**
     * Fetch records that have <code>client_id_issued_at BETWEEN lowerInclusive
     * AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientIdIssuedAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_ID_ISSUED_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_id_issued_at IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientIdIssuedAt(LocalDateTime... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_ID_ISSUED_AT, values);
    }

    /**
     * Fetch records that have <code>client_secret BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientSecret(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_SECRET, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_secret IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientSecret(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_SECRET, values);
    }

    /**
     * Fetch records that have <code>client_secret_expires_at BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientSecretExpiresAt(LocalDateTime lowerInclusive, LocalDateTime upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_SECRET_EXPIRES_AT, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_secret_expires_at IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientSecretExpiresAt(LocalDateTime... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_SECRET_EXPIRES_AT, values);
    }

    /**
     * Fetch records that have <code>client_name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_name IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientName(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_NAME, values);
    }

    /**
     * Fetch records that have <code>client_authentication_methods BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientAuthenticationMethods(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_AUTHENTICATION_METHODS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_authentication_methods IN
     * (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientAuthenticationMethods(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_AUTHENTICATION_METHODS, values);
    }

    /**
     * Fetch records that have <code>authorization_grant_types BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfAuthorizationGrantTypes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.AUTHORIZATION_GRANT_TYPES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>authorization_grant_types IN
     * (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByAuthorizationGrantTypes(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.AUTHORIZATION_GRANT_TYPES, values);
    }

    /**
     * Fetch records that have <code>redirect_uris BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfRedirectUris(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.REDIRECT_URIS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>redirect_uris IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByRedirectUris(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.REDIRECT_URIS, values);
    }

    /**
     * Fetch records that have <code>post_logout_redirect_uris BETWEEN
     * lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfPostLogoutRedirectUris(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.POST_LOGOUT_REDIRECT_URIS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>post_logout_redirect_uris IN
     * (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByPostLogoutRedirectUris(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.POST_LOGOUT_REDIRECT_URIS, values);
    }

    /**
     * Fetch records that have <code>scopes BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfScopes(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.SCOPES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>scopes IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByScopes(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.SCOPES, values);
    }

    /**
     * Fetch records that have <code>client_settings BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfClientSettings(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_SETTINGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>client_settings IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByClientSettings(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.CLIENT_SETTINGS, values);
    }

    /**
     * Fetch records that have <code>token_settings BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfTokenSettings(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.TOKEN_SETTINGS, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>token_settings IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByTokenSettings(String... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.TOKEN_SETTINGS, values);
    }

    /**
     * Fetch records that have <code>photo BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchRangeOfPhoto(byte[] lowerInclusive, byte[] upperInclusive) {
        return fetchRange(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.PHOTO, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>photo IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2RegisteredClient> fetchByPhoto(byte[]... values) {
        return fetch(Oauth2RegisteredClient.OAUTH2_REGISTERED_CLIENT.PHOTO, values);
    }
}
