/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.records;


import cn.luixtech.passport.server.persistence.tables.User;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record21;
import org.jooq.Row21;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserRecord extends UpdatableRecordImpl<UserRecord> implements Record21<String, String, String, String, String, String, String, String, String, String, LocalDateTime, Boolean, String, Boolean, Boolean, LocalDateTime, LocalDateTime, String, LocalDateTime, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>luix-passport.user.id</code>.
     */
    public void setId(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>luix-passport.user.id</code>.
     */
    public String getId() {
        return (String) get(0);
    }

    /**
     * Setter for <code>luix-passport.user.tenant_id</code>.
     */
    public void setTenantId(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>luix-passport.user.tenant_id</code>.
     */
    public String getTenantId() {
        return (String) get(1);
    }

    /**
     * Setter for <code>luix-passport.user.username</code>.
     */
    public void setUsername(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>luix-passport.user.username</code>.
     */
    public String getUsername() {
        return (String) get(2);
    }

    /**
     * Setter for <code>luix-passport.user.email</code>.
     */
    public void setEmail(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>luix-passport.user.email</code>.
     */
    public String getEmail() {
        return (String) get(3);
    }

    /**
     * Setter for <code>luix-passport.user.mobile_no</code>.
     */
    public void setMobileNo(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>luix-passport.user.mobile_no</code>.
     */
    public String getMobileNo() {
        return (String) get(4);
    }

    /**
     * Setter for <code>luix-passport.user.first_name</code>.
     */
    public void setFirstName(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>luix-passport.user.first_name</code>.
     */
    public String getFirstName() {
        return (String) get(5);
    }

    /**
     * Setter for <code>luix-passport.user.last_name</code>.
     */
    public void setLastName(String value) {
        set(6, value);
    }

    /**
     * Getter for <code>luix-passport.user.last_name</code>.
     */
    public String getLastName() {
        return (String) get(6);
    }

    /**
     * Setter for <code>luix-passport.user.password_hash</code>.
     */
    public void setPasswordHash(String value) {
        set(7, value);
    }

    /**
     * Getter for <code>luix-passport.user.password_hash</code>.
     */
    public String getPasswordHash() {
        return (String) get(7);
    }

    /**
     * Setter for <code>luix-passport.user.activation_code</code>.
     */
    public void setActivationCode(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>luix-passport.user.activation_code</code>.
     */
    public String getActivationCode() {
        return (String) get(8);
    }

    /**
     * Setter for <code>luix-passport.user.reset_code</code>.
     */
    public void setResetCode(String value) {
        set(9, value);
    }

    /**
     * Getter for <code>luix-passport.user.reset_code</code>.
     */
    public String getResetCode() {
        return (String) get(9);
    }

    /**
     * Setter for <code>luix-passport.user.reset_time</code>.
     */
    public void setResetTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>luix-passport.user.reset_time</code>.
     */
    public LocalDateTime getResetTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>luix-passport.user.profile_photo_enabled</code>.
     */
    public void setProfilePhotoEnabled(Boolean value) {
        set(11, value);
    }

    /**
     * Getter for <code>luix-passport.user.profile_photo_enabled</code>.
     */
    public Boolean getProfilePhotoEnabled() {
        return (Boolean) get(11);
    }

    /**
     * Setter for <code>luix-passport.user.remarks</code>.
     */
    public void setRemarks(String value) {
        set(12, value);
    }

    /**
     * Getter for <code>luix-passport.user.remarks</code>.
     */
    public String getRemarks() {
        return (String) get(12);
    }

    /**
     * Setter for <code>luix-passport.user.activated</code>.
     */
    public void setActivated(Boolean value) {
        set(13, value);
    }

    /**
     * Getter for <code>luix-passport.user.activated</code>.
     */
    public Boolean getActivated() {
        return (Boolean) get(13);
    }

    /**
     * Setter for <code>luix-passport.user.enabled</code>.
     */
    public void setEnabled(Boolean value) {
        set(14, value);
    }

    /**
     * Getter for <code>luix-passport.user.enabled</code>.
     */
    public Boolean getEnabled() {
        return (Boolean) get(14);
    }

    /**
     * Setter for <code>luix-passport.user.account_expires_at</code>.
     */
    public void setAccountExpiresAt(LocalDateTime value) {
        set(15, value);
    }

    /**
     * Getter for <code>luix-passport.user.account_expires_at</code>.
     */
    public LocalDateTime getAccountExpiresAt() {
        return (LocalDateTime) get(15);
    }

    /**
     * Setter for <code>luix-passport.user.password_expires_at</code>.
     */
    public void setPasswordExpiresAt(LocalDateTime value) {
        set(16, value);
    }

    /**
     * Getter for <code>luix-passport.user.password_expires_at</code>.
     */
    public LocalDateTime getPasswordExpiresAt() {
        return (LocalDateTime) get(16);
    }

    /**
     * Setter for <code>luix-passport.user.created_by</code>.
     */
    public void setCreatedBy(String value) {
        set(17, value);
    }

    /**
     * Getter for <code>luix-passport.user.created_by</code>.
     */
    public String getCreatedBy() {
        return (String) get(17);
    }

    /**
     * Setter for <code>luix-passport.user.created_time</code>.
     */
    public void setCreatedTime(LocalDateTime value) {
        set(18, value);
    }

    /**
     * Getter for <code>luix-passport.user.created_time</code>.
     */
    public LocalDateTime getCreatedTime() {
        return (LocalDateTime) get(18);
    }

    /**
     * Setter for <code>luix-passport.user.modified_by</code>.
     */
    public void setModifiedBy(String value) {
        set(19, value);
    }

    /**
     * Getter for <code>luix-passport.user.modified_by</code>.
     */
    public String getModifiedBy() {
        return (String) get(19);
    }

    /**
     * Setter for <code>luix-passport.user.modified_time</code>.
     */
    public void setModifiedTime(LocalDateTime value) {
        set(20, value);
    }

    /**
     * Getter for <code>luix-passport.user.modified_time</code>.
     */
    public LocalDateTime getModifiedTime() {
        return (LocalDateTime) get(20);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record21 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row21<String, String, String, String, String, String, String, String, String, String, LocalDateTime, Boolean, String, Boolean, Boolean, LocalDateTime, LocalDateTime, String, LocalDateTime, String, LocalDateTime> fieldsRow() {
        return (Row21) super.fieldsRow();
    }

    @Override
    public Row21<String, String, String, String, String, String, String, String, String, String, LocalDateTime, Boolean, String, Boolean, Boolean, LocalDateTime, LocalDateTime, String, LocalDateTime, String, LocalDateTime> valuesRow() {
        return (Row21) super.valuesRow();
    }

    @Override
    public Field<String> field1() {
        return User.USER.ID;
    }

    @Override
    public Field<String> field2() {
        return User.USER.TENANT_ID;
    }

    @Override
    public Field<String> field3() {
        return User.USER.USERNAME;
    }

    @Override
    public Field<String> field4() {
        return User.USER.EMAIL;
    }

    @Override
    public Field<String> field5() {
        return User.USER.MOBILE_NO;
    }

    @Override
    public Field<String> field6() {
        return User.USER.FIRST_NAME;
    }

    @Override
    public Field<String> field7() {
        return User.USER.LAST_NAME;
    }

    @Override
    public Field<String> field8() {
        return User.USER.PASSWORD_HASH;
    }

    @Override
    public Field<String> field9() {
        return User.USER.ACTIVATION_CODE;
    }

    @Override
    public Field<String> field10() {
        return User.USER.RESET_CODE;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return User.USER.RESET_TIME;
    }

    @Override
    public Field<Boolean> field12() {
        return User.USER.PROFILE_PHOTO_ENABLED;
    }

    @Override
    public Field<String> field13() {
        return User.USER.REMARKS;
    }

    @Override
    public Field<Boolean> field14() {
        return User.USER.ACTIVATED;
    }

    @Override
    public Field<Boolean> field15() {
        return User.USER.ENABLED;
    }

    @Override
    public Field<LocalDateTime> field16() {
        return User.USER.ACCOUNT_EXPIRES_AT;
    }

    @Override
    public Field<LocalDateTime> field17() {
        return User.USER.PASSWORD_EXPIRES_AT;
    }

    @Override
    public Field<String> field18() {
        return User.USER.CREATED_BY;
    }

    @Override
    public Field<LocalDateTime> field19() {
        return User.USER.CREATED_TIME;
    }

    @Override
    public Field<String> field20() {
        return User.USER.MODIFIED_BY;
    }

    @Override
    public Field<LocalDateTime> field21() {
        return User.USER.MODIFIED_TIME;
    }

    @Override
    public String component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTenantId();
    }

    @Override
    public String component3() {
        return getUsername();
    }

    @Override
    public String component4() {
        return getEmail();
    }

    @Override
    public String component5() {
        return getMobileNo();
    }

    @Override
    public String component6() {
        return getFirstName();
    }

    @Override
    public String component7() {
        return getLastName();
    }

    @Override
    public String component8() {
        return getPasswordHash();
    }

    @Override
    public String component9() {
        return getActivationCode();
    }

    @Override
    public String component10() {
        return getResetCode();
    }

    @Override
    public LocalDateTime component11() {
        return getResetTime();
    }

    @Override
    public Boolean component12() {
        return getProfilePhotoEnabled();
    }

    @Override
    public String component13() {
        return getRemarks();
    }

    @Override
    public Boolean component14() {
        return getActivated();
    }

    @Override
    public Boolean component15() {
        return getEnabled();
    }

    @Override
    public LocalDateTime component16() {
        return getAccountExpiresAt();
    }

    @Override
    public LocalDateTime component17() {
        return getPasswordExpiresAt();
    }

    @Override
    public String component18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime component19() {
        return getCreatedTime();
    }

    @Override
    public String component20() {
        return getModifiedBy();
    }

    @Override
    public LocalDateTime component21() {
        return getModifiedTime();
    }

    @Override
    public String value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTenantId();
    }

    @Override
    public String value3() {
        return getUsername();
    }

    @Override
    public String value4() {
        return getEmail();
    }

    @Override
    public String value5() {
        return getMobileNo();
    }

    @Override
    public String value6() {
        return getFirstName();
    }

    @Override
    public String value7() {
        return getLastName();
    }

    @Override
    public String value8() {
        return getPasswordHash();
    }

    @Override
    public String value9() {
        return getActivationCode();
    }

    @Override
    public String value10() {
        return getResetCode();
    }

    @Override
    public LocalDateTime value11() {
        return getResetTime();
    }

    @Override
    public Boolean value12() {
        return getProfilePhotoEnabled();
    }

    @Override
    public String value13() {
        return getRemarks();
    }

    @Override
    public Boolean value14() {
        return getActivated();
    }

    @Override
    public Boolean value15() {
        return getEnabled();
    }

    @Override
    public LocalDateTime value16() {
        return getAccountExpiresAt();
    }

    @Override
    public LocalDateTime value17() {
        return getPasswordExpiresAt();
    }

    @Override
    public String value18() {
        return getCreatedBy();
    }

    @Override
    public LocalDateTime value19() {
        return getCreatedTime();
    }

    @Override
    public String value20() {
        return getModifiedBy();
    }

    @Override
    public LocalDateTime value21() {
        return getModifiedTime();
    }

    @Override
    public UserRecord value1(String value) {
        setId(value);
        return this;
    }

    @Override
    public UserRecord value2(String value) {
        setTenantId(value);
        return this;
    }

    @Override
    public UserRecord value3(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public UserRecord value4(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public UserRecord value5(String value) {
        setMobileNo(value);
        return this;
    }

    @Override
    public UserRecord value6(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public UserRecord value7(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public UserRecord value8(String value) {
        setPasswordHash(value);
        return this;
    }

    @Override
    public UserRecord value9(String value) {
        setActivationCode(value);
        return this;
    }

    @Override
    public UserRecord value10(String value) {
        setResetCode(value);
        return this;
    }

    @Override
    public UserRecord value11(LocalDateTime value) {
        setResetTime(value);
        return this;
    }

    @Override
    public UserRecord value12(Boolean value) {
        setProfilePhotoEnabled(value);
        return this;
    }

    @Override
    public UserRecord value13(String value) {
        setRemarks(value);
        return this;
    }

    @Override
    public UserRecord value14(Boolean value) {
        setActivated(value);
        return this;
    }

    @Override
    public UserRecord value15(Boolean value) {
        setEnabled(value);
        return this;
    }

    @Override
    public UserRecord value16(LocalDateTime value) {
        setAccountExpiresAt(value);
        return this;
    }

    @Override
    public UserRecord value17(LocalDateTime value) {
        setPasswordExpiresAt(value);
        return this;
    }

    @Override
    public UserRecord value18(String value) {
        setCreatedBy(value);
        return this;
    }

    @Override
    public UserRecord value19(LocalDateTime value) {
        setCreatedTime(value);
        return this;
    }

    @Override
    public UserRecord value20(String value) {
        setModifiedBy(value);
        return this;
    }

    @Override
    public UserRecord value21(LocalDateTime value) {
        setModifiedTime(value);
        return this;
    }

    @Override
    public UserRecord values(String value1, String value2, String value3, String value4, String value5, String value6, String value7, String value8, String value9, String value10, LocalDateTime value11, Boolean value12, String value13, Boolean value14, Boolean value15, LocalDateTime value16, LocalDateTime value17, String value18, LocalDateTime value19, String value20, LocalDateTime value21) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        value14(value14);
        value15(value15);
        value16(value16);
        value17(value17);
        value18(value18);
        value19(value19);
        value20(value20);
        value21(value21);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserRecord
     */
    public UserRecord() {
        super(User.USER);
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(String id, String tenantId, String username, String email, String mobileNo, String firstName, String lastName, String passwordHash, String activationCode, String resetCode, LocalDateTime resetTime, Boolean profilePhotoEnabled, String remarks, Boolean activated, Boolean enabled, LocalDateTime accountExpiresAt, LocalDateTime passwordExpiresAt, String createdBy, LocalDateTime createdTime, String modifiedBy, LocalDateTime modifiedTime) {
        super(User.USER);

        setId(id);
        setTenantId(tenantId);
        setUsername(username);
        setEmail(email);
        setMobileNo(mobileNo);
        setFirstName(firstName);
        setLastName(lastName);
        setPasswordHash(passwordHash);
        setActivationCode(activationCode);
        setResetCode(resetCode);
        setResetTime(resetTime);
        setProfilePhotoEnabled(profilePhotoEnabled);
        setRemarks(remarks);
        setActivated(activated);
        setEnabled(enabled);
        setAccountExpiresAt(accountExpiresAt);
        setPasswordExpiresAt(passwordExpiresAt);
        setCreatedBy(createdBy);
        setCreatedTime(createdTime);
        setModifiedBy(modifiedBy);
        setModifiedTime(modifiedTime);
        resetChangedOnNotNull();
    }

    /**
     * Create a detached, initialised UserRecord
     */
    public UserRecord(cn.luixtech.passport.server.persistence.tables.pojos.User value) {
        super(User.USER);

        if (value != null) {
            setId(value.getId());
            setTenantId(value.getTenantId());
            setUsername(value.getUsername());
            setEmail(value.getEmail());
            setMobileNo(value.getMobileNo());
            setFirstName(value.getFirstName());
            setLastName(value.getLastName());
            setPasswordHash(value.getPasswordHash());
            setActivationCode(value.getActivationCode());
            setResetCode(value.getResetCode());
            setResetTime(value.getResetTime());
            setProfilePhotoEnabled(value.getProfilePhotoEnabled());
            setRemarks(value.getRemarks());
            setActivated(value.getActivated());
            setEnabled(value.getEnabled());
            setAccountExpiresAt(value.getAccountExpiresAt());
            setPasswordExpiresAt(value.getPasswordExpiresAt());
            setCreatedBy(value.getCreatedBy());
            setCreatedTime(value.getCreatedTime());
            setModifiedBy(value.getModifiedBy());
            setModifiedTime(value.getModifiedTime());
            resetChangedOnNotNull();
        }
    }
}
