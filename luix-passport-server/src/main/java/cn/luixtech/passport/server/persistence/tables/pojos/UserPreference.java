/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.pojos;


import java.io.Serializable;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserPreference implements Serializable {

    private static final long serialVersionUID = 1L;

    private String userId;
    private String lang;
    private String timeZone;
    private String dateFormat;

    public UserPreference() {}

    public UserPreference(UserPreference value) {
        this.userId = value.userId;
        this.lang = value.lang;
        this.timeZone = value.timeZone;
        this.dateFormat = value.dateFormat;
    }

    public UserPreference(
        String userId,
        String lang,
        String timeZone,
        String dateFormat
    ) {
        this.userId = userId;
        this.lang = lang;
        this.timeZone = timeZone;
        this.dateFormat = dateFormat;
    }

    /**
     * Getter for <code>luix-passport.user_preference.user_id</code>.
     */
    public String getUserId() {
        return this.userId;
    }

    /**
     * Setter for <code>luix-passport.user_preference.user_id</code>.
     */
    public void setUserId(String userId) {
        this.userId = userId;
    }

    /**
     * Getter for <code>luix-passport.user_preference.lang</code>.
     */
    public String getLang() {
        return this.lang;
    }

    /**
     * Setter for <code>luix-passport.user_preference.lang</code>.
     */
    public void setLang(String lang) {
        this.lang = lang;
    }

    /**
     * Getter for <code>luix-passport.user_preference.time_zone</code>.
     */
    public String getTimeZone() {
        return this.timeZone;
    }

    /**
     * Setter for <code>luix-passport.user_preference.time_zone</code>.
     */
    public void setTimeZone(String timeZone) {
        this.timeZone = timeZone;
    }

    /**
     * Getter for <code>luix-passport.user_preference.date_format</code>.
     */
    public String getDateFormat() {
        return this.dateFormat;
    }

    /**
     * Setter for <code>luix-passport.user_preference.date_format</code>.
     */
    public void setDateFormat(String dateFormat) {
        this.dateFormat = dateFormat;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final UserPreference other = (UserPreference) obj;
        if (this.userId == null) {
            if (other.userId != null)
                return false;
        }
        else if (!this.userId.equals(other.userId))
            return false;
        if (this.lang == null) {
            if (other.lang != null)
                return false;
        }
        else if (!this.lang.equals(other.lang))
            return false;
        if (this.timeZone == null) {
            if (other.timeZone != null)
                return false;
        }
        else if (!this.timeZone.equals(other.timeZone))
            return false;
        if (this.dateFormat == null) {
            if (other.dateFormat != null)
                return false;
        }
        else if (!this.dateFormat.equals(other.dateFormat))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.userId == null) ? 0 : this.userId.hashCode());
        result = prime * result + ((this.lang == null) ? 0 : this.lang.hashCode());
        result = prime * result + ((this.timeZone == null) ? 0 : this.timeZone.hashCode());
        result = prime * result + ((this.dateFormat == null) ? 0 : this.dateFormat.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("UserPreference (");

        sb.append(userId);
        sb.append(", ").append(lang);
        sb.append(", ").append(timeZone);
        sb.append(", ").append(dateFormat);

        sb.append(")");
        return sb.toString();
    }
}
