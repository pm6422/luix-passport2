/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.Tenant;
import cn.luixtech.passport.server.persistence.tables.records.TenantRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
@Repository
public class TenantDao extends DAOImpl<TenantRecord, cn.luixtech.passport.server.persistence.tables.pojos.Tenant, Record2<String, String>> {

    /**
     * Create a new TenantDao without any configuration
     */
    public TenantDao() {
        super(Tenant.TENANT, cn.luixtech.passport.server.persistence.tables.pojos.Tenant.class);
    }

    /**
     * Create a new TenantDao with an attached configuration
     */
    @Autowired
    public TenantDao(Configuration configuration) {
        super(Tenant.TENANT, cn.luixtech.passport.server.persistence.tables.pojos.Tenant.class, configuration);
    }

    @Override
    public Record2<String, String> getId(cn.luixtech.passport.server.persistence.tables.pojos.Tenant object) {
        return compositeKeyRecord(object.getId(), object.getName());
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Tenant> fetchRangeOfId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenant.TENANT.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Tenant> fetchById(String... values) {
        return fetch(Tenant.TENANT.ID, values);
    }

    /**
     * Fetch records that have <code>name BETWEEN lowerInclusive AND
     * upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Tenant> fetchRangeOfName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Tenant.TENANT.NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>name IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Tenant> fetchByName(String... values) {
        return fetch(Tenant.TENANT.NAME, values);
    }
}
