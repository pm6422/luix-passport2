/*
 * This file is generated by jOOQ.
 */
package cn.luixtech.passport.server.persistence.tables.daos;


import cn.luixtech.passport.server.persistence.tables.Oauth2AuthorizationConsent;
import cn.luixtech.passport.server.persistence.tables.records.Oauth2AuthorizationConsentRecord;

import java.util.List;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Repository
public class Oauth2AuthorizationConsentDao extends DAOImpl<Oauth2AuthorizationConsentRecord, cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent, Record2<String, String>> {

    /**
     * Create a new Oauth2AuthorizationConsentDao without any configuration
     */
    public Oauth2AuthorizationConsentDao() {
        super(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT, cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent.class);
    }

    /**
     * Create a new Oauth2AuthorizationConsentDao with an attached configuration
     */
    @Autowired
    public Oauth2AuthorizationConsentDao(Configuration configuration) {
        super(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT, cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent.class, configuration);
    }

    @Override
    public Record2<String, String> getId(cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent object) {
        return compositeKeyRecord(object.getRegisteredClientId(), object.getPrincipalName());
    }

    /**
     * Fetch records that have <code>registered_client_id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent> fetchRangeOfRegisteredClientId(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT.REGISTERED_CLIENT_ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>registered_client_id IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent> fetchByRegisteredClientId(String... values) {
        return fetch(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT.REGISTERED_CLIENT_ID, values);
    }

    /**
     * Fetch records that have <code>principal_name BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent> fetchRangeOfPrincipalName(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT.PRINCIPAL_NAME, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>principal_name IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent> fetchByPrincipalName(String... values) {
        return fetch(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT.PRINCIPAL_NAME, values);
    }

    /**
     * Fetch records that have <code>authorities BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent> fetchRangeOfAuthorities(String lowerInclusive, String upperInclusive) {
        return fetchRange(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT.AUTHORITIES, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>authorities IN (values)</code>
     */
    public List<cn.luixtech.passport.server.persistence.tables.pojos.Oauth2AuthorizationConsent> fetchByAuthorities(String... values) {
        return fetch(Oauth2AuthorizationConsent.OAUTH2_AUTHORIZATION_CONSENT.AUTHORITIES, values);
    }
}
